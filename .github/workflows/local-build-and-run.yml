name: Local Build and Run
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - main
jobs:
  # build and release
  build-and-release:
    runs-on: self-hosted
    #needs: [lint, test]
    #if: startsWith(github.event.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version: 1.23.0
      - uses: pnpm/action-setup@v4
        with:
          package_json_file: "frontend/package.json"
      - uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          cache: "pnpm"
          cache-dependency-path: "frontend/pnpm-lock.yaml"
      - name: Build frontend
        run: make build-frontend
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # Extract metadata for Docker
      - name: Extract metadata for Docker
        id: meta
        run: |
          DOCKER_IMAGE=filebrowser
          VERSION=${GITHUB_REF#refs/tags/}
          echo "IMAGE_NAME=${DOCKER_IMAGE}" >> $GITHUB_ENV
          echo "IMAGE_TAG=${VERSION}" >> $GITHUB_ENV
      # Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }},${{ env.IMAGE_NAME }}:latest
  # Run container on self-hosted runner
  run-container:
    runs-on: self-hosted
    needs: [build-and-release]
    if: startsWith(github.event.ref, 'refs/tags/v')
    steps:
      - name: Set environment variables
        run: |
          DOCKER_IMAGE=filebrowser
          VERSION=${GITHUB_REF#refs/tags/}
          echo "IMAGE_NAME=${DOCKER_IMAGE}" >> $GITHUB_ENV
          echo "IMAGE_TAG=${VERSION}" >> $GITHUB_ENV
      
      - name: Pull latest image
        run: docker pull ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
      
      - name: Stop and remove existing container
        run: |
          docker stop filebrowser || true
          docker rm filebrowser || true
      
      - name: Run Docker container locally
        run: |
          # Run the Docker container with the specified format and volume mount to /app/uploads
          docker run -d \
            --name filebrowser \
            --user $(id -u):$(id -g) \
            -p 8080:8080 \
            -v /app/uploads:/data \
            -v $(pwd)/config:/config \
            -e FB_BASEURL=/filebrowser \
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          
          # Verify container is running
          docker ps
          
          # Optional: Show container logs
          docker logs filebrowser
